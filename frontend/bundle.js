/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ (() => {

eval("var stationTitles = [];\nfetch('http://localhost:8080/api/stations').then(function (response) {\n  return response.json();\n}).then(function (data) {\n  stationTitles = data.map(function (station) {\n    return station.title;\n  });\n})[\"catch\"](function (error) {\n  console.error('Ошибка при получении списка станций:', error);\n});\ndocument.getElementById('searchBtn').addEventListener('click', function () {\n  var fromStation = document.getElementById('fromStation').value.trim();\n  var toStation = document.getElementById('toStation').value.trim();\n  var date = document.getElementById('date').value;\n  if (fromStation || toStation) {\n    if (fromStation && toStation) {\n      // Если обе станции введены, ищем расписание между ними\n      fetchTrainRoute(fromStation, toStation, date);\n    } else {\n      // Если введена только одна станция, показываем все поезда через неё\n      fetchTrainsThroughStation(fromStation || toStation, date);\n    }\n  } else {\n    alert('Пожалуйста, введите хотя бы одну станцию.');\n  }\n});\nfunction fetchTrainsThroughStation(station, date) {\n  // Формируем URL для запроса к бэкенду\n  var url = \"http://localhost:8080/api/trains/through/?station=\".concat(station, \"&date=\").concat(date);\n\n  // Отправляем GET-запрос\n  fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error('Ошибка при получении данных');\n    }\n    return response.json();\n  }).then(function (data) {\n    console.log(data);\n    displayTrains(data);\n  })[\"catch\"](function (error) {\n    console.error('Ошибка:', error);\n    alert('Не удалось загрузить данные');\n  });\n}\nfunction fetchTrainRoute(fromStation, toStation, date) {\n  var url = \"http://localhost:8080/api/trains/route/?from=\".concat(fromStation, \"&to=\").concat(toStation, \"&date=\").concat(date);\n  fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(function (response) {\n    if (!response.ok) {\n      throw new Error('Ошибка запроса: ' + response.status);\n    }\n    return response.json();\n  }).then(function (data) {\n    return displayTrains(data);\n  })[\"catch\"](function (error) {\n    return console.error('Ошибка при выполнении запроса:', error);\n  });\n}\nfunction formatTime(dateString) {\n  var date = new Date(dateString);\n  var hours = date.getHours().toString().padStart(2, '0');\n  var minutes = date.getMinutes().toString().padStart(2, '0');\n  return \"\".concat(hours, \":\").concat(minutes);\n}\nfunction displayTrains(trains) {\n  var scheduleDiv = document.getElementById('schedule');\n  scheduleDiv.innerHTML = '<h2>Поезда:</h2>';\n  if (trains.length > 0) {\n    var scheduleHTML = '<ul>';\n    trains.forEach(function (train) {\n      var stationTo = train.station_to ? train.station_to : train.station_from;\n      var arrival = train.arrival_time ? \"\\u041F\\u0440\\u0438\\u0431\\u044B\\u0442\\u0438\\u0435: \".concat(stationTo, \" - \").concat(formatTime(train.arrival_time)) : '';\n      var departure = train.departure_time ? \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435: \".concat(train.station_from, \" - \").concat(formatTime(train.departure_time)) : '';\n      scheduleHTML += \"\\n                <li>\\n                    <p>\\u041F\\u043E\\u0435\\u0437\\u0434 \\u2116\".concat(train.number, \" (\").concat(train.title, \")</p>\\n                    \").concat(arrival ? \"<p>\".concat(arrival, \"</p>\") : '', \"\\n                    \").concat(departure ? \"<p>\".concat(departure, \"</p>\") : '', \"\\n                </li>\\n            \");\n    });\n    scheduleHTML += '</ul>';\n    scheduleDiv.innerHTML += scheduleHTML;\n  } else {\n    scheduleDiv.innerHTML += '<p>Поезда не найдены для данного маршрута.</p>';\n  }\n}\ndocument.getElementById('swapStationsBtn').addEventListener('click', function () {\n  var fromStation = document.getElementById('fromStation');\n  var toStation = document.getElementById('toStation');\n  if (fromStation.value && toStation.value) {\n    var temp = fromStation.value;\n    fromStation.value = toStation.value;\n    toStation.value = temp;\n  } else {\n    alert(\"Пожалуйста, введите обе станции перед тем, как менять их местами.\");\n  }\n});\nfunction filterStations(query) {\n  return stationTitles.filter(function (station) {\n    return station.toLowerCase().startsWith(query.toLowerCase());\n  });\n}\n\n// Обновляем datalist с подсказками для полей ввода\nfunction updateDatalist(inputId, datalistId) {\n  var input = document.getElementById(inputId);\n  var datalist = document.getElementById(datalistId);\n  var query = input.value;\n  datalist.innerHTML = '';\n  if (query.length === 0) return;\n  var filtered = filterStations(query);\n  filtered.forEach(function (station) {\n    var option = document.createElement('option');\n    option.value = station;\n    datalist.appendChild(option);\n  });\n}\n\n// Слушатели ввода для полей станций\ndocument.getElementById('fromStation').addEventListener('input', function () {\n  updateDatalist('fromStation', 'fromStationList');\n});\ndocument.getElementById('toStation').addEventListener('input', function () {\n  updateDatalist('toStation', 'toStationList');\n});\n\n//# sourceURL=webpack://frontend/./script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./script.js"]();
/******/ 	
/******/ })()
;